(function() {
  var camera, fillLight, mesh, renderer, scene;

  camera = mesh = scene = renderer = fillLight = void 0;
  var HEIGHT, WIDTH;
  HEIGHT = window.innerHeight;
  WIDTH = window.innerWidth;

  window.addEventListener("resize", () => {
    renderer.setSize(window.innerWidth, window.innerHeight);
    camera.aspect = window.innerWidth / window.innerHeight;
    if (window.innerWidth < 768){
      camera.fov=75;
      camera.position.y=-200;
    }
    else {
      camera.fov=55;
      camera.position.y=0;
    }
    
    camera.updateProjectionMatrix();
  });
  
  window.onload = function() {
    var animate, base, baseMat, e, geometryBase, light, material, terran, terranGeom, terran2, terranGeom2;
    
    if (window.innerWidth < 768){
      camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 1, 1000);
      camera.position.y=-200;
    }
    else {
      camera = new THREE.PerspectiveCamera(55, window.innerWidth / window.innerHeight, 1, 1000);
      camera.position.y=0;
    }
    camera.position.z = 1000;
    scene = new THREE.Scene();
    geometryBase = new THREE.SphereGeometry(390, 20, 20);
    terranGeom = new THREE.SphereGeometry(380, 30, 13);
    terranGeom2 = new THREE.SphereGeometry(380, 30, 13);
    baseMat = new THREE.MeshLambertMaterial({
      color: 0x004D6D,
      shading: THREE.FlatShading
    });
    material = new THREE.MeshLambertMaterial({
      color: 0x179236,
      shading: THREE.FlatShading
    });
    
    [terranGeom.vertices].forEach(function(g) {
      return g.forEach(function(v) {
        return v[["x", "y", "z"][~~(Math.random() * 10)]] += Math.random() * 60;
      });
    });
    [terranGeom2.vertices].forEach(function(g) {
      return g.forEach(function(v) {
        return v[["x", "y", "z"][~~(Math.random() * 10)]] -= Math.random() * 60;
      });
    });
    
    base = new THREE.Mesh(geometryBase, baseMat);
    terran = new THREE.Mesh(terranGeom, material);
    terran2 = new THREE.Mesh(terranGeom2, material);
    scene.add(base);
    base.add(terran);
    base.add(terran2);
    light = new THREE.DirectionalLight(0xffffff);
    light.position.set(0, 0, .5);
    scene.add(light);
    fillLight = new THREE.AmbientLight(0x2e1527);
    scene.add(fillLight);
    try {
      renderer = new THREE.WebGLRenderer();
    } catch (error) {
      e = error;
      renderer = new THREE.CanvasRenderer();
      alert("come back in chrome or firefox! or enable webgl");
    }
    renderer.setSize(window.innerWidth, window.innerHeight);
    document.body.appendChild(renderer.domElement);
    animate = function() {
      base.rotation.y += 0.002;
      requestAnimationFrame(animate);
      return renderer.render(scene, camera);
    };
    return animate();
  };

}).call(this);

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiPGFub255bW91cz4iXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQSxNQUFBLE1BQUEsRUFBQSxTQUFBLEVBQUEsU0FBQSxFQUFBLElBQUEsRUFBQSxRQUFBLEVBQUE7O0VBQUEsTUFBQSxHQUFTLElBQUEsR0FBTyxLQUFBLEdBQVEsUUFBQSxHQUFXLFNBQUEsR0FBWTs7RUFFL0MsU0FBQSxHQUFZLFFBQUEsQ0FBQSxDQUFBO0FBQ1osUUFBQSxNQUFBLEVBQUEsR0FBQSxFQUFBLENBQUEsRUFBQSxDQUFBLEVBQUE7SUFBRSxNQUFBLEdBQVMsUUFBUSxDQUFDLGFBQVQsQ0FBdUIsUUFBdkI7SUFDVCxNQUFNLENBQUMsWUFBUCxDQUFvQixPQUFwQixFQUE2QixNQUFNLENBQUMsVUFBcEM7SUFDQSxNQUFNLENBQUMsWUFBUCxDQUFvQixRQUFwQixFQUE4QixNQUFNLENBQUMsV0FBckM7SUFDQSxNQUFNLENBQUMsWUFBUCxDQUFvQixJQUFwQixFQUEwQixPQUExQjtJQUNBLEdBQUEsR0FBTSxNQUFNLENBQUMsVUFBUCxDQUFrQixJQUFsQjtJQUNOLEdBQUcsQ0FBQyxTQUFKLEdBQWdCO0lBQ2hCLEtBQVMsNEJBQVQ7TUFDRSxHQUFHLENBQUMsU0FBSixDQUFBO01BQ0EsVUFBQSxHQUFhLElBQUksQ0FBQyxNQUFMLENBQUEsQ0FBQSxHQUFnQjtNQUM3QixHQUFHLENBQUMsR0FBSixDQUFRLElBQUksQ0FBQyxNQUFMLENBQUEsQ0FBQSxHQUFnQixNQUFNLENBQUMsVUFBL0IsRUFBMkMsSUFBSSxDQUFDLE1BQUwsQ0FBQSxDQUFBLEdBQWdCLE1BQU0sQ0FBQyxXQUFsRSxFQUErRSxVQUEvRSxFQUEyRixDQUEzRixFQUE4RixDQUFBLEdBQUUsSUFBSSxDQUFDLEVBQXJHLEVBQXlHLENBQXpHO01BQ0EsR0FBRyxDQUFDLElBQUosQ0FBQTtJQUpGO1dBTUEsUUFBUSxDQUFDLElBQUksQ0FBQyxXQUFkLENBQTBC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dkIsRUFBMEIsQ0FBMUI7SUFDQSxLQUFLLENBQUMsR0FBTixDQUFXLEtBQVg7SUFFQSxTQUFBLEdBQVksSUFBSSxLQUFLLENBQUMsWUFBVixDQUF3QixRQUF4QjtJQUNaLEtBQUssQ0FBQyxHQUFOLENBQVcsU0FBWDtBQUVBO01BQ0UsUUFBQSxHQUFXLElBQUksS0FBSyxDQUFDLGFBQVYsQ0FBQSxFQURiO0tBRUEsYUFBQTtNQUFNO01BQ0osUUFBQSxHQUFXLElBQUksS0FBSyxDQUFDLGNBQVYsQ0FBQTtNQUNYLEtBQUEsQ0FBTSxpREFBTixFQUZGOztJQUlBLFFBQVEsQ0FBQyxPQUFULENBQWlCLE1BQU0sQ0FBQyxVQUF4QixFQUFvQyxNQUFNLENBQUMsV0FBM0M7SUFHQSxRQUFRLENBQUMsSUFBSSxDQUFDLFdBQWQsQ0FBMEIsUUFBUSxDQUFDLFVBQW5DO0lBR0EsT0FBQSxHQUFVLFFBQUEsQ0FBQSxDQUFBO01BQ04sSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFkLElBQW1CO01BRW5CLHFCQUFBLENBQXNCLE9BQXRCO2FBQ0EsUUFBUSxDQUFDLE1BQVQsQ0FBZ0IsS0FBaEIsRUFBdUIsTUFBdkI7SUFKTTtXQU9WLE9BQUEsQ0FBQTtFQS9EYztBQWpCaEIiLCJzb3VyY2VzQ29udGVudCI6WyJjYW1lcmEgPSBtZXNoID0gc2NlbmUgPSByZW5kZXJlciA9IGZpbGxMaWdodCA9IHVuZGVmaW5lZFxuXG5kcmF3U3RhcnMgPSAoKSAtPlxuICBjYW52YXMgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50ICdjYW52YXMnXG4gIGNhbnZhcy5zZXRBdHRyaWJ1dGUgJ3dpZHRoJywgd2luZG93LmlubmVyV2lkdGhcbiAgY2FudmFzLnNldEF0dHJpYnV0ZSAnaGVpZ2h0Jywgd2luZG93LmlubmVySGVpZ2h0XG4gIGNhbnZhcy5zZXRBdHRyaWJ1dGUgJ2lkJywgXCJzdGFyc1wiXG4gIGN0eCA9IGNhbnZhcy5nZXRDb250ZXh0ICcyZCdcbiAgY3R4LmZpbGxTdHlsZSA9IFwiI2ZmZmZmZlwiXG4gIGZvciBpIGluIFswIC4uIDIwMF1cbiAgICBjdHguYmVnaW5QYXRoKCk7XG4gICAgc2l6ZVJhbmRvbSA9IE1hdGgucmFuZG9tKCkgKiAyXG4gICAgY3R4LmFyYyBNYXRoLnJhbmRvbSgpICogd2luZG93LmlubmVyV2lkdGgsIE1hdGgucmFuZG9tKCkgKiB3aW5kb3cuaW5uZXJIZWlnaHQsIHNpemVSYW5kb20sIDAsIDIqTWF0aC5QSSwgMFxuICAgIGN0eC5maWxsKClcblxuICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkIGNhbnZhc1xuICBcbndpbmRvdy5vbmxvYWQgPSAoKSAtPlxuICBkcmF3U3RhcnMoKVxuICBjYW1lcmEgPSBuZXcgVEhSRUUuUGVyc3BlY3RpdmVDYW1lcmEoNzUsIHdpbmRvdy5pbm5lcldpZHRoIC8gd2luZG93LmlubmVySGVpZ2h0LCAxLCAxMDAwMClcbiAgY2FtZXJhLnBvc2l0aW9uLnogPSAxMDAwXG5cbiAgc2NlbmUgICAgICAgICAgID0gbmV3IFRIUkVFLlNjZW5lXG4gIGdlb21ldHJ5QmFzZSAgICA9IG5ldyBUSFJFRS5TcGhlcmVHZW9tZXRyeSg0MDAsIDUwLCA1NilcbiAgdGVycmFuR2VvbSAgICAgID0gbmV3IFRIUkVFLlNwaGVyZUdlb21ldHJ5KDM5OCwgMzAsIDMwKVxuICB0ZXJyYW5IaWdoR2VvbSAgPSBuZXcgVEhSRUUuU3BoZXJlR2VvbWV0cnkoMzkwLCAyMCwgMjApXG5cbiAgYmFzZU1hdCAgICAgID0gbmV3IFRIUkVFLk1lc2hMYW1iZXJ0TWF0ZXJpYWxcbiAgICAgICAgICAgICAgICAgICAgY29sb3I6IDB4NzZhY2RhXG4gICAgICAgICAgICAgICAgICAgIHNoYWRpbmc6IFRIUkVFLkZsYXRTaGFkaW5nXG5cbiAgbWF0ZXJpYWwgICAgID0gbmV3IFRIUkVFLk1lc2hMYW1iZXJ0TWF0ZXJpYWxcbiAgICAgICAgICAgICAgICAgICAgY29sb3I6IDB4YjhiNjU4XG4gICAgICAgICAgICAgICAgICAgIHNoYWRpbmc6IFRIUkVFLkZsYXRTaGFkaW5nXG5cbiAgaGlnaFRlcnJhbk1hdD0gbmV3IFRIUkVFLk1lc2hMYW1iZXJ0TWF0ZXJpYWxcbiAgICAgICAgICAgICAgICAgICAgY29sb3I6IDB4ZTNjOTdmXG4gICAgICAgICAgICAgICAgICAgIHNoYWRpbmc6IFRIUkVFLkZsYXRTaGFkaW5nXG5cbiAgZ2VvbWV0cnlCYXNlLnZlcnRpY2VzLmZvckVhY2ggKHYpIC0+XG4gICAgdltbXCJ4XCIsXCJ5XCIsXCJ6XCJdW35+KE1hdGgucmFuZG9tKCkgKiAzKV1dICs9IE1hdGgucmFuZG9tKCkgKiAxMFxuXG4gIFt0ZXJyYW5IaWdoR2VvbS52ZXJ0aWNlcywgdGVycmFuR2VvbS52ZXJ0aWNlc10uZm9yRWFjaCAoZykgLT5cbiAgICBnLmZvckVhY2ggKHYpIC0+XG4gICAgICB2W1tcInhcIixcInlcIixcInpcIl1bfn4oTWF0aC5yYW5kb20oKSAqIDMpXV0gKz0gTWF0aC5yYW5kb20oKSAqIDQwXG5cbiAgYmFzZSA9IG5ldyBUSFJFRS5NZXNoIGdlb21ldHJ5QmFzZSwgYmFzZU1hdFxuICB0ZXJyYW4gPSBuZXcgVEhSRUUuTWVzaCB0ZXJyYW5HZW9tLCBtYXRlcmlhbFxuICBoaWdoVGVycmFuID0gbmV3IFRIUkVFLk1lc2ggdGVycmFuSGlnaEdlb20sIGhpZ2hUZXJyYW5NYXRcblxuICBzY2VuZS5hZGQgYmFzZVxuICBiYXNlLmFkZCB0ZXJyYW5cbiAgYmFzZS5hZGQgaGlnaFRlcnJhblxuXG4gIGxpZ2h0ID0gbmV3IFRIUkVFLkRpcmVjdGlvbmFsTGlnaHQoIDB4ZmZmZmZmIClcbiAgbGlnaHQucG9zaXRpb24uc2V0KCAxLCAxLCAxIClcbiAgc2NlbmUuYWRkKCBsaWdodCApXG5cbiAgZmlsbExpZ2h0ID0gbmV3IFRIUkVFLkFtYmllbnRMaWdodCggMHgyZTE1MjcgKVxuICBzY2VuZS5hZGQoIGZpbGxMaWdodCApXG5cbiAgdHJ5XG4gICAgcmVuZGVyZXIgPSBuZXcgVEhSRUUuV2ViR0xSZW5kZXJlcigpXG4gIGNhdGNoIGVcbiAgICByZW5kZXJlciA9IG5ldyBUSFJFRS5DYW52YXNSZW5kZXJlcigpXG4gICAgYWxlcnQgXCJjb21lIGJhY2sgaW4gY2hyb21lIG9yIGZpcmVmb3ghIG9yIGVuYWJsZSB3ZWJnbFwiXG4gIFxuICByZW5kZXJlci5zZXRTaXplIHdpbmRvdy5pbm5lcldpZHRoLCB3aW5kb3cuaW5uZXJIZWlnaHRcblxuXG4gIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQgcmVuZGVyZXIuZG9tRWxlbWVudFxuXG5cbiAgYW5pbWF0ZSA9ICgpIC0+XG4gICAgICBiYXNlLnJvdGF0aW9uLnkgKz0gMC4wMDEyNVxuXG4gICAgICByZXF1ZXN0QW5pbWF0aW9uRnJhbWUgYW5pbWF0ZVxuICAgICAgcmVuZGVyZXIucmVuZGVyIHNjZW5lLCBjYW1lcmFcblxuXG4gIGFuaW1hdGUoKVxuIl19
//# sourceURL=coffeescript